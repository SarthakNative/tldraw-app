generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id          String          @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  ownerId     String
  owner       User            @relation("ProjectOwner", fields: [ownerId], references: [id], onDelete: Cascade)
  members     ProjectMember[]
  whiteboards Whiteboard[]

  @@map("projects")
}

model User {
  id                 String   @id @default(cuid())
  username           String   @unique
  normalizedUsername String?  @unique
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  ownedProjects Project[]       @relation("ProjectOwner")
  memberships   ProjectMember[]

  @@map("users")
}

model ProjectMember {
  id        String   @id @default(cuid())
  userId    String
  projectId String
  role      String   @default("member")
  joinedAt  DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@unique([userId, projectId])
  @@map("project_members")
}

model Whiteboard {
  id        String   @id @default(cuid())
  name      String
  content   String   @default("{}")
  projectId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  data      Json?
  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("whiteboards")
}
